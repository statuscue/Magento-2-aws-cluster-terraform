#!/bin/bash
#=================================================================================#
#        MagenX e-commerce stack for Magento 2                                    #
#        Copyright (C) 2013-present admin@magenx.com                              #
#        All rights reserved.                                                     #
#=================================================================================#

_AWSTOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 60")
_INSTANCE_LOCAL_IP=$(curl -s -H "X-aws-ec2-metadata-token: ${_AWSTOKEN}" http://169.254.169.254/latest/meta-data/local-ipv4)
_INSTANCE_ID=$(curl -s -H "X-aws-ec2-metadata-token: ${_AWSTOKEN}" http://169.254.169.254/latest/meta-data/instance-id)
_INSTANCE_TYPE=$(curl -s -H "X-aws-ec2-metadata-token: ${_AWSTOKEN}" http://169.254.169.254/latest/meta-data/instance-type)
_INSTANCE_TAG=$(curl -s -H "X-aws-ec2-metadata-token: ${_AWSTOKEN}" http://169.254.169.254/latest/meta-data/tags/instance/Name)
_PROJECT=$(curl -s -H "X-aws-ec2-metadata-token: ${_AWSTOKEN}" http://169.254.169.254/latest/meta-data/tags/instance/Project)

_TIMER_USER_DATA_START="$(date +%T)"

## get all env vars from parameter store
_PARAMETER=$(aws ssm get-parameter --name "${_PROJECT}-env" --query 'Parameter.Value' --output text)
declare -A parameter
while IFS== read -r key value; do parameter["$key"]="$value"; done < <(echo ${_PARAMETER} | jq -r 'to_entries[] | .key + "=" + .value')

## extract instance name from tag
_INSTANCE_NAME=$(echo ${_INSTANCE_TAG} | awk -v FS="(${parameter["PROJECT"]}-|-ec2)" '{print $2}')

if [ $(stat -f -L -c %T ${parameter["WEB_ROOT_PATH"]}/pub/media) != "nfs" ]; then
mkdir -p /mnt/efs
mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2 ${parameter["EFS_DNS_TARGET"]}:/ /mnt/efs
mkdir -p /mnt/efs/data/{var,pub/media}
chown -R ${parameter["BRAND"]}:${parameter["PHP_USER"]} /mnt/efs/
find /mnt/efs -type d -exec chmod 2770 {} \;
umount /mnt/efs
mount -a
fi

cd ${parameter["WEB_ROOT_PATH"]}
su ${BRAND} -s /bin/bash -c "git init -b main"
su ${BRAND} -s /bin/bash -c "git remote add origin ${parameter["CODECOMMIT_APP_REPO"]}"
su ${BRAND} -s /bin/bash -c "git fetch origin main"
su ${BRAND} -s /bin/bash -c "git reset origin/main --hard"

sed -i "s/INSTANCE_LOCAL_IP/${_INSTANCE_LOCAL_IP}/" /etc/nginx/sites-available/magento.conf
systemctl restart nginx

/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:amazon-cloudwatch-agent-${_INSTANCE_NAME}.json

_TIMER_USER_DATA_END="$(date +%T)"

cat > /tmp/timer_user_data_log <<END
Instance: ${_INSTANCE_NAME} ${_INSTANCE_ID} ${_INSTANCE_TYPE}
Region: ${parameter["AWS_DEFAULT_REGION"]}
Brand: ${parameter["BRAND"]}
Uptime since:  $(uptime -s)
END

/bin/systemctl status nginx.service php*fpm.service >> /tmp/timer_user_data_log
ss -tunlp >> /tmp/timer_user_data_log

aws sns publish \
    --region ${parameter["AWS_DEFAULT_REGION"]} \
    --topic-arn ${parameter["SNS_TOPIC_ARN"]} \
    --subject "Timer for user_data: ${parameter["BRAND"]} at ${parameter["AWS_DEFAULT_REGION"]} ${_INSTANCE_NAME} ${_INSTANCE_ID}" \
    --message file:///tmp/timer_user_data_log

chmod 750 /usr/bin/aws /root/aws
